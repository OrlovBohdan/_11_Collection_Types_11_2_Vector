#[test]

/*

// FILL in the blank
fn main() {
    let mut v1 = Vec::from([1, 2, 4]);
    v1.pop();
    v1.push(3);

    let mut v2 = Vec::new();
    v2.__;

    assert_eq!(v1, v2);

    println!("Success!");
}
*/

fn main() {
    let mut v1 = Vec::from([1, 2, 4]);
    v1.pop(); // Удаляем последний элемент (4)
    v1.push(3); // Добавляем 3 в вектор

    let mut v2 = Vec::new();
    v2.extend([1, 2, 3].iter().cloned()); // Добавляем элементы 1, 2 и 3 в v2

    assert_eq!(v1, v2); // Проверка на равенство векторов v1 и v2

    println!("Success!"); // Вывод сообщения об успешном выполнении
}

/*
v2.extend([1, 2, 3].iter().cloned()): Этот код создает новый вектор v2 и добавляет в него элементы из массива [1, 2, 3]. Метод iter() создает итератор, а cloned() возвращает итератор, который копирует элементы, чтобы их можно было добавить в v2.
Теперь векторы v1 и v2 содержат одинаковые значения, что делает их равными при сравнении.
*/